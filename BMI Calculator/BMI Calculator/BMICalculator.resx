<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QBuRXhpZgAATU0AKgAAAAgAAwESAAMAAAABAAEAAAExAAIAAAAH
        AAAAModpAAQAAAABAAAAOgAAAABHb29nbGUAAAADkAAABwAAAAQwMjIwoAIABAAAAAEAAAHToAMABAAA
        AAEAAAFaAAAAAAAA/9sAQwACAQECAQECAgICAgICAgMFAwMDAwMGBAQDBQcGBwcHBgcHCAkLCQgICggH
        BwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMGAwMGDAgHCAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAGQETAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8Atyajdb/+Pq86dp39PrXb/DH4U3vxI0XQrz+3LixTXPGjeDwDvk8gjTo743Gd
        43D59mzA+7u3c4rgZOXb9a7j4XfGWP4feGbjTrnTZtQa11g+JNGmguhbmx1JrFrJmlBRjNCYjE2wFGDR
        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
        9Xi+WUlfmetna+3kf//Z
</value>
  </data>
</root>